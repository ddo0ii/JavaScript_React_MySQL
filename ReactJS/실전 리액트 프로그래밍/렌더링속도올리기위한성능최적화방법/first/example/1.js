function MyComponent(props) {
  // ...
}
function isEqual(prevProps, nextProps) {
  // true 또는 false를 반환
  // 참을 반환하면 이전 렌더링 결과를 재사용
  // 거짓이라면 컴포넌트 함수를 이용해 가상돔을 업데이트하고 변경된 부분만 실제 돔에 반영
  // 만약 이렇게 속성 값 비교함수를 입력하지 않으면, 얕은 비교를 수행하는 기본함수가 사용이 됨
  //
  // 컴포넌트를 memo 함수로 감싸지 않았다면, 항상 거짓을 반환하는 속성값 비교함수가 사용된다고 생각할 수 있다
  // 이때는 속성값이 변경되지않아도 부모컴포넌트가 렌더링 될때마다 자기자신도 렌더링될것이다
  // 속성값이 항상 거짓을 반환하더라도, 속성값이 변경되지 않았다면, 실제돔도 변경되지않을 것이기때문에 대체로 문제가 되지는 않음
  //
  // 하지만 렌더링 성능이 중요한 상황에서는 memo함수를 사용해서 컴포넌트 함수의 실행과 가상돔의 계산을 생략할 수 있기 때문에 렌더링 성능상의 이점은 있음
}
React.memo(MyComponent, isEqual);
